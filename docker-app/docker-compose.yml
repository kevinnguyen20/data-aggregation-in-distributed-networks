version: '3.8'

services:
  zookeeper:
    image: zookeeper:3.7.1-temurin
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.2.6
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=INTERNAL://:9092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CREATE_TOPICS=${CONSUMER_TOPIC}
      - KAFKA_ADVERTISED_HOST_NAME=host.docker.internal # change to 172.17.0.1 if running on Ubuntu
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    # entrypoint: |
    #   sh -c "\
    #     kafka-topics.sh --create \
    #     --topic ${CONSUMER_TOPIC} \
    #     --partitions ${PARALLELISM} \
    #     --replication-factor 1 \
    #     --bootstrap-server ${KAFKA_BOOTSTRAP_SERVERS} \
    #     --if-not-exists && \
    #     exec kafka-server-start.sh /opt/bitnami/kafka/config/server.properties"

  c-producer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: c-producer
    depends_on:
      - kafka
    networks:
      - kafka-network
    command: ["1", "2"]

networks:
  kafka-network:
    driver: bridge

# sudo docker run -it --rm --network docker-app_kafka-network confluentinc/cp-kafka:7.2.6 /bin/kafka-console-producer --bootstrap-server kafka:9092 --topic flink-kafka-topic

# sudo docker container exec -it kafka /bin/bash
# kafka-console-consumer --bootstrap-server localhost:9092 --topic flink-kafka-topic -from-beginning
